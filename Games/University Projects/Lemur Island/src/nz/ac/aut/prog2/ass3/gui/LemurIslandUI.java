package nz.ac.aut.prog2.ass3.gui;

import java.awt.Component;
import java.awt.GridLayout;
import java.util.HashSet;
import java.util.Set;
import nz.ac.aut.prog2.ass3.gameModel.Food;
import nz.ac.aut.prog2.ass3.gameModel.Game;
import nz.ac.aut.prog2.ass3.gameModel.GridSquare;
import nz.ac.aut.prog2.ass3.gameModel.Item;
import nz.ac.aut.prog2.ass3.gameModel.MoveDirection;
import nz.ac.aut.prog2.ass3.gameModel.Occupant;
import nz.ac.aut.prog2.ass3.gameModel.Position;

/**
 * GUI for the Lemur Island game.
 * 
 * @author Anne Philpott & Stefan Marks
 * @version Assignment 3 S2 2011
 * @modified by Luke Harper 24/10/13
 */
public class LemurIslandUI extends javax.swing.JFrame
{
    private Game game;
    private Set<Item> backpack;
    
    /** 
     * Creates a new JFrame for Lemur Island.
     * 
     * @param game the game object to display in this frame
     */
    public LemurIslandUI(Game game) 
    {
        this.game = game;
        backpack = new HashSet<Item>();
        initComponents();
        
        createGridSquarePanels();
        update();
    }

    /**
     * Creates the game grid square panels
     */ 
    private void createGridSquarePanels() {
        int rows = game.getIsland().getNumRows();
        int columns = game.getIsland().getNumColumns();

        pnlGrid.removeAll();
        pnlGrid.setLayout(new GridLayout(rows, columns));

        for (int row = 0; row < rows; row++) {
            for (int col = 0; col < columns; col++) {
                GridSquarePanel panel = new GridSquarePanel(game, row, col);
                pnlGrid.add(panel);
            }
        }
    }
    
    /**
     * Updates the state of the UI based on the state of the game.
     */
    private void update() { 
        // Set grid panels and draw island
        for(Component component: pnlGrid.getComponents()) {
            GridSquarePanel gsp = (GridSquarePanel) component;
            gsp.update();
        }
        
        game.drawIsland();
        
        // Display player details
        if (game.getPlayer().isAlive()) {
            pName.setText(game.getPlayer().getName());
            pPosition.setText("X : " + Integer.toString(game.getPlayer().getPosition().getRow()) + " | Y : " + Integer.toString(game.getPlayer().getPosition().getColumn()));
            pStamina.setText(Double.toString(game.getPlayer().getStaminaLevel()) + " / " + Double.toString(game.getPlayer().getMaximumStaminaLevel()));
            pWeight.setText(Double.toString(game.getPlayer().getCurrentBackpackWeight()) + " / " + Double.toString(10.0));
            pSize.setText(Double.toString(game.getPlayer().getCurrentBackpackSize()) + " / " + Double.toString(5.0));
        } else {
            // Player is dead, has he won or not?
            if(!cLog.getText().equals("> CONGRATULATIONS YOU ARE VICTOR!! ROOOOOOAAARRRR!"))
            cLog.setText("> You have Died... Mwhahaha....");
            pBp.removeAllItems();
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlGrid = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        gOptions = new javax.swing.JLabel();
        nGame = new javax.swing.JButton();
        eGame = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        mNorth = new javax.swing.JButton();
        mEast = new javax.swing.JButton();
        mSouth = new javax.swing.JButton();
        mWest = new javax.swing.JButton();
        gCommands = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        gLog = new javax.swing.JLabel();
        cLog = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        pDetails = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pName = new javax.swing.JLabel();
        pPosition = new javax.swing.JLabel();
        pStamina = new javax.swing.JLabel();
        pWeight = new javax.swing.JLabel();
        pSize = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        aInspect = new javax.swing.JButton();
        aCollect = new javax.swing.JButton();
        aUse = new javax.swing.JButton();
        aDrop = new javax.swing.JButton();
        pAbil = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        pAbil1 = new javax.swing.JLabel();
        pBp = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lemur Island");

        pnlGrid.setBackground(new java.awt.Color(255, 255, 255));
        pnlGrid.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlGrid.setLayout(new java.awt.GridLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gOptions.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        gOptions.setForeground(new java.awt.Color(51, 51, 255));
        gOptions.setText("Game Options");

        nGame.setText("New Game");
        nGame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nGameActionPerformed(evt);
            }
        });

        eGame.setText("Exit Game");
        eGame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        eGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eGameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(nGame)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(eGame)
                .addGap(38, 38, 38))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(204, Short.MAX_VALUE)
                .addComponent(gOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gOptions)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nGame)
                    .addComponent(eGame))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        nGame.getAccessibleContext().setAccessibleName("New Game");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        mNorth.setText("North");
        mNorth.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        mNorth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mNorthActionPerformed(evt);
            }
        });

        mEast.setText("East");
        mEast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mEastActionPerformed(evt);
            }
        });

        mSouth.setText("West");
        mSouth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSouthActionPerformed(evt);
            }
        });

        mWest.setText("South");
        mWest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mWestActionPerformed(evt);
            }
        });

        gCommands.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        gCommands.setForeground(new java.awt.Color(51, 51, 255));
        gCommands.setText("Moves");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(mSouth, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(mEast, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(83, 83, 83))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addGap(40, 40, 40)
                            .addComponent(mWest, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(gCommands, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mNorth, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(129, 129, 129))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mNorth)
                    .addComponent(gCommands))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mEast)
                    .addComponent(mSouth))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mWest)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gLog.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        gLog.setForeground(new java.awt.Color(51, 51, 255));
        gLog.setText("Console log");

        cLog.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        cLog.setText(">");
        cLog.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cLog)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(gLog, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(197, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(gLog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cLog, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        pDetails.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        pDetails.setForeground(new java.awt.Color(51, 51, 255));
        pDetails.setText("Player Details");

        jLabel1.setText("Name :");

        jLabel2.setText("Position : ");

        jLabel3.setText("Stamina :");

        jLabel4.setText("Backpack weight :");

        jLabel5.setText("Backpack size :");

        pName.setText("jLabel6");

        pPosition.setText("jLabel7");

        pStamina.setText("jLabel8");

        pWeight.setText("jLabel9");

        pSize.setText("jLabel10");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(57, 57, 57)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pSize)
                            .addComponent(pWeight)
                            .addComponent(pStamina)
                            .addComponent(pPosition)
                            .addComponent(pName))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pDetails)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pName))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pPosition))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pStamina))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(pWeight))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(pSize))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        aInspect.setText("Inspect");
        aInspect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aInspectActionPerformed(evt);
            }
        });

        aCollect.setText("Collect");
        aCollect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aCollectActionPerformed(evt);
            }
        });

        aUse.setText("Use");
        aUse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aUseActionPerformed(evt);
            }
        });

        aDrop.setText("Drop");
        aDrop.setToolTipText("");
        aDrop.setActionCommand("Drop");
        aDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aDropActionPerformed(evt);
            }
        });

        pAbil.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        pAbil.setForeground(new java.awt.Color(51, 51, 255));
        pAbil.setText("Abilities");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(aInspect, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(aCollect, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(aUse, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(aDrop, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(pAbil)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pAbil)
                .addGap(13, 13, 13)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aInspect)
                    .addComponent(aCollect))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aUse)
                    .addComponent(aDrop))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        pAbil1.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        pAbil1.setForeground(new java.awt.Color(51, 51, 255));
        pAbil1.setText("Backpack");

        pBp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pBpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(pAbil1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(pBp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pAbil1)
                .addGap(18, 18, 18)
                .addComponent(pBp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnlGrid, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlGrid, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void eGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eGameActionPerformed
        // Exits the program
        System.exit(0);
    }//GEN-LAST:event_eGameActionPerformed

    private void nGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nGameActionPerformed
        // Starts a new game
        game = new Game();
        createGridSquarePanels();
        cLog.setText("> ");
        pBp.removeAllItems();
        update();
    }//GEN-LAST:event_nGameActionPerformed

    private void mNorthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mNorthActionPerformed
        // Moves the player North
        if (game.getPlayer().isAlive()) {
            boolean success = game.playerMove(MoveDirection.NORTH);
            if (!success) {
                cLog.setText("> Oh no! You have no stamina to make that move");
            }
            update();
        }
    }//GEN-LAST:event_mNorthActionPerformed

    private void mWestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mWestActionPerformed
        // Moves the player South
        if (game.getPlayer().isAlive()) {
            boolean success = game.playerMove(MoveDirection.SOUTH);
            if (!success) {
                cLog.setText("> Oh no! You have no stamina to make that move");
            }
            update();
        }
    }//GEN-LAST:event_mWestActionPerformed

    private void mEastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mEastActionPerformed
        // Moves the player East
        if (game.getPlayer().isAlive()) {
            boolean success = game.playerMove(MoveDirection.EAST);
            if (!success) {
                cLog.setText("> Oh no! You have no stamina to make that move");
            }
            update();
        }
    }//GEN-LAST:event_mEastActionPerformed

    private void mSouthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSouthActionPerformed
        // Moves the player West
        if (game.getPlayer().isAlive()) {
            boolean success = game.playerMove(MoveDirection.WEST);
            if (!success) {
                cLog.setText("> Oh no! You have no stamina to make that move");
            }
            update();
        }
    }//GEN-LAST:event_mSouthActionPerformed

    private void aInspectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aInspectActionPerformed
        // Inspect the occupant at the players position
        if (game.getPlayer().isAlive()) {
            Position pos = game.getPlayer().getPosition();
            GridSquare gs = game.getIsland().getGridSquare(pos);

            Occupant[] occ = gs.getOccupants();
            String comment = "> There is nothing there";
            for (Occupant occupant : occ) {
                comment = "> You see " + (occupant.getDescription());
            }
            cLog.setText(comment);
            update();
        }
    }//GEN-LAST:event_aInspectActionPerformed

    private void aCollectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aCollectActionPerformed
        // Collect the item at the players position
        if (game.getPlayer().isAlive()) {
            Position pos = game.getPlayer().getPosition();
            GridSquare gs = game.getIsland().getGridSquare(pos);

            Occupant[] occ = gs.getOccupants();
            for (Occupant occupant : occ) {
                if (occupant instanceof Item) {
                    Item pick = (Item) occupant;
                    // Collect the Item
                    boolean success = game.getPlayer().collect(pick);
                    if (success) {
                        // Store details of the collected item in the hash set
                        backpack.add(pick);
                        gs.removeOccupant(occupant);
                        cLog.setText("> You picked up a " + occupant.getName());
                        // Add the item to the players backpack
                        pBp.addItem(pick.getName());
                    }
                } else {
                    cLog.setText("> There is no item to collect");
                }
            }
            if (occ.length < 1) {
                cLog.setText("> There is no item to collect");
            }
            update();
        }
    }//GEN-LAST:event_aCollectActionPerformed

    private void aDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aDropActionPerformed
        // Drop selected item from backpack
        if (game.getPlayer().isAlive()) {
            if (pBp.getSelectedItem() != null) {
                String name = (String) pBp.getSelectedItem();
                for (Item item : backpack) {
                    if (item.getName().equals(name)) {
                        // Remove the item from the backpack list, the backpack hashset, and the player
                        pBp.removeItem(pBp.getSelectedItem());
                        game.getPlayer().drop(item);
                        backpack.remove(item);
                    }
                }
                update();
            } else {
                cLog.setText("> You have not selected an item");
            }
            update();
        }
    }//GEN-LAST:event_aDropActionPerformed

    private void pBpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pBpActionPerformed
        
    }//GEN-LAST:event_pBpActionPerformed

    private void aUseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aUseActionPerformed
        if (game.getPlayer().isAlive()) {
            if (pBp.getSelectedItem() != null) {
                // Compare item in backpack ui, to the backpack hashset
                String name = (String) pBp.getSelectedItem();
                for (Item item : backpack) {
                    if (item.getName().equals(name)) {
                        // If item exists, respond to different item situations
                        if (item.getStringRepresentation().equals("F")) {
                            Food food = (Food) item;
                            game.getPlayer().increaseStamina(food.getEnergy());
                            cLog.setText("> Mmmm... Yummy!");
                        }
                        if (item.getName().equals("Treasure")) {
                            cLog.setText("> CONGRATULATIONS YOU ARE VICTOR!! ROOOOOOAAARRRR!");
                            game.getPlayer().kill();
                        }
                        if (item.getName().equals("Treasure Map")) {
                            cLog.setText("> Hurry the treasure is here (7,7)");
                        }
                        // Remove item from backpack ui
                        pBp.removeItem(pBp.getSelectedItem());
                        game.getPlayer().drop(item);
                        backpack.remove(item);
                    }
                }
            } else {
                cLog.setText("> You have no items to select");
            }
            update();
        }
    }//GEN-LAST:event_aUseActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aCollect;
    private javax.swing.JButton aDrop;
    private javax.swing.JButton aInspect;
    private javax.swing.JButton aUse;
    private javax.swing.JTextField cLog;
    private javax.swing.JButton eGame;
    private javax.swing.JLabel gCommands;
    private javax.swing.JLabel gLog;
    private javax.swing.JLabel gOptions;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton mEast;
    private javax.swing.JButton mNorth;
    private javax.swing.JButton mSouth;
    private javax.swing.JButton mWest;
    private javax.swing.JButton nGame;
    private javax.swing.JLabel pAbil;
    private javax.swing.JLabel pAbil1;
    private javax.swing.JComboBox pBp;
    private javax.swing.JLabel pDetails;
    private javax.swing.JLabel pName;
    private javax.swing.JLabel pPosition;
    private javax.swing.JLabel pSize;
    private javax.swing.JLabel pStamina;
    private javax.swing.JLabel pWeight;
    private javax.swing.JPanel pnlGrid;
    // End of variables declaration//GEN-END:variables

}
